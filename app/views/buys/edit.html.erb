<div class="table_container">
  <div class="section-title">
    発注内容の編集(金額入力)
  </div>

  <div class="sub-title">
    <%= @supplier.company %>への発注
  </div>

  <%= form_with(model: [@supplier, @buy], local: true) do |f| %>
    <div>
      <%= f.label :transaction_date, "納品日" %>
      <%= f.date_field :transaction_date, class: "form-group" %>
    </div>

    <table class="table-bordered">
      <thead>
        <tr>
          <th>カテゴリ</th>
          <th>商品</th>
          <th>数量</th>
          <th>単位</th>
          <th>単価</th>
          <th>金額</th>
        </tr>
      </thead>
      <tbody>
        <%= f.fields_for :buy_items do |buy_item_form| %>
          <tr>
            <td><%= buy_item_form.collection_select :category_id, @categories, :id, :category, { prompt: "カテゴリを選択" }, { class: "" } %></td>
            <td><%= buy_item_form.collection_select :item_id, @items, :id, :item_name, { prompt: "商品を選択" }, { class: "" } %></td>
            <td><%= buy_item_form.number_field :quantity, class: 'quantity-edit table-quantity', 'data-id': buy_item_form.index %></td>
            <td class="table-unit" id="unit"><%= @items.find { |item| item.id == buy_item_form.object.item_id }&.unit || "--" %></td>
            <td><%= buy_item_form.text_field :item_price, class: 'item-price-edit table-price', 'data-id': buy_item_form.index %></td>
            <td><%= buy_item_form.text_field :item_total_price, class: 'item-total-price-edit table-price', 'data-id': buy_item_form.index %></td>
          </tr>
        <% end %>  
      </tbody>
      <tfoot>
        <td class="table-total-text"><%= f.label :total_price, '合計' %></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td><%= f.text_field :total_price, id: 'total_price_edit', class: 'table-price' %></td>
      </tfoot>
    </table>

    <div class="box-wrap-btn">
      <%= f.submit "更新", class: "box-search" %>
    </div>
  <% end %>

  <div class="back">
    <%= link_to  '前のページに戻る', buys_order_index_path %>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
  // 合計価格の計算
  const calculateTotalPrice = () => {
    let totalPrice = 0;

    // 各商品合計価格を合計
    document.querySelectorAll(".item-total-price-edit").forEach(function(itemTotalPriceElement) {
      let itemTotalPrice = parseFloat(itemTotalPriceElement.value) || 0;
      totalPrice += itemTotalPrice;
    });

    // 合計金額をtotal_price_editフィールドに設定
    document.getElementById("total_price_edit").value = totalPrice;
  };

  // 商品単価と数量から商品合計価格を計算
  const updateItemTotalPrice = (element) => {
    const sellItemRow = element.closest('tr');
    const quantityElement = sellItemRow.querySelector('.quantity-edit');
    const itemPriceElement = sellItemRow.querySelector('.item-price-edit');
    const itemTotalPriceElement = sellItemRow.querySelector('.item-total-price-edit');

    const quantity = parseFloat(quantityElement.value) || 0;
    const itemPrice = parseFloat(itemPriceElement.value) || 0;

    const itemTotalPrice = quantity * itemPrice;
    itemTotalPriceElement.value = itemTotalPrice;

    // 更新後、合計価格を再計算
    calculateTotalPrice();
  };

  // 全てのquantityフィールドにイベントリスナーを追加
  document.querySelectorAll(".quantity-edit").forEach(function(element) {
    element.addEventListener("input", function() {
      updateItemTotalPrice(element);
    });
  });

  // 全てのitem-priceフィールドにイベントリスナーを追加
  document.querySelectorAll(".item-price-edit").forEach(function(element) {
    element.addEventListener("input", function() {
      updateItemTotalPrice(element);
    });
  });

  // 初期ロード時に合計を計算
  calculateTotalPrice();
});
</script>

